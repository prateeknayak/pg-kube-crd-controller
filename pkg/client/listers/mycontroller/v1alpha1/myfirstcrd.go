// This file was automatically generated by lister-gen

package v1alpha1

import (
	v1alpha1 "github.com/prateeknayak/pg-kube-crd-controller/pkg/apis/mycontroller/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MyFirstCRDLister helps list MyFirstCRDs.
type MyFirstCRDLister interface {
	// List lists all MyFirstCRDs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.MyFirstCRD, err error)
	// MyFirstCRDs returns an object that can list and get MyFirstCRDs.
	MyFirstCRDs(namespace string) MyFirstCRDNamespaceLister
	MyFirstCRDListerExpansion
}

// myFirstCRDLister implements the MyFirstCRDLister interface.
type myFirstCRDLister struct {
	indexer cache.Indexer
}

// NewMyFirstCRDLister returns a new MyFirstCRDLister.
func NewMyFirstCRDLister(indexer cache.Indexer) MyFirstCRDLister {
	return &myFirstCRDLister{indexer: indexer}
}

// List lists all MyFirstCRDs in the indexer.
func (s *myFirstCRDLister) List(selector labels.Selector) (ret []*v1alpha1.MyFirstCRD, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MyFirstCRD))
	})
	return ret, err
}

// MyFirstCRDs returns an object that can list and get MyFirstCRDs.
func (s *myFirstCRDLister) MyFirstCRDs(namespace string) MyFirstCRDNamespaceLister {
	return myFirstCRDNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MyFirstCRDNamespaceLister helps list and get MyFirstCRDs.
type MyFirstCRDNamespaceLister interface {
	// List lists all MyFirstCRDs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.MyFirstCRD, err error)
	// Get retrieves the MyFirstCRD from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.MyFirstCRD, error)
	MyFirstCRDNamespaceListerExpansion
}

// myFirstCRDNamespaceLister implements the MyFirstCRDNamespaceLister
// interface.
type myFirstCRDNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MyFirstCRDs in the indexer for a given namespace.
func (s myFirstCRDNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.MyFirstCRD, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.MyFirstCRD))
	})
	return ret, err
}

// Get retrieves the MyFirstCRD from the indexer for a given namespace and name.
func (s myFirstCRDNamespaceLister) Get(name string) (*v1alpha1.MyFirstCRD, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("myfirstcrd"), name)
	}
	return obj.(*v1alpha1.MyFirstCRD), nil
}
